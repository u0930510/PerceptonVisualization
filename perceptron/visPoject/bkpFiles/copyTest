<!DOCTYPE html>
<meta charset="utf-8">
<style>

    /*set the axis line color, dot stroke, font size, and font position*/

    body {
        font: 15px sans-serif;
    }

    .name{
        position: relative;
        top: 90px;
        text-align: left;
        font-weight: bold;
    }

    .title {
        position: relative;
        text-align: left;
        font-size: 25px;
    }

    .axis path,
    .axis line {
        fill: none;
        stroke: #000;
        shape-rendering: crispEdges;
    }

    .dot {
        stroke: #000;
    }

    #filter {
        position: absolute;
    }

    #mark {
        padding-left: 150px;
        position: inherit;
    }

    #xAXs {

        position: relative;
        left: 290px;
        bottom: 30px;
    }

    #yAXs {

        position: relative;
        bottom: 30px;
        left: 315px;

    }

    #label {
        position: absolute;
        top: 599px;
        bottom: 125px;
        left: 300px;
        right: 0px;
    }

    #label2 {
        position: absolute;
        top: 599px;
        bottom: 125px;
        left: 430px;
        right: 0px;
    }

</style>

<body>


<script src="http://d3js.org/d3.v3.min.js"></script>

<script>

    var margin = {top: 20, right: 20, bottom: 30, left: 40},
            width = 960 - bias.left - bias.right,
            height = 500 - bias.top - bias.bottom;


    var x = d3.scale.linear()
            .range([0, width]);

    var y = d3.scale.linear()
            .range([height, 0]);


    var color = d3.scale.category10();

    var axisNames = {

        petalWidth: 'Petal Width',
        petalLength: 'Petal Length',
        sepalWidth: 'Sepal Width',
        sepalLength: 'Sepal Length'
    };

    var xAxis = d3.svg.axis()
            .scale(x)
            .orient("bottom");

    var yAxis = d3.svg.axis()
            .scale(y)
            .orient("left");


    var svg = d3.select("body").append("svg2")
            .attr("width", width + bias.left + bias.right)
            .attr("height", height + bias.top + bias.bottom)
            .append("g")
            .attr("transform", "translate(" + bias.left + "," + bias.top + ")");


    d3.csv("iris.csv", function(error, data) {
        data.forEach(function(d) {
            d.petalLength = +d.petalLength;
            d.petalWidth = +d.petalWidth;
            d.sepalLength = +d.sepalLength;
            d.sepalWidth = +d.sepalWidth;
        });

        x.domain(d3.extent(data, function(d) { return d.petalWidth; })).nice();
        y.domain(d3.extent(data, function(d) { return d.petalLength; })).nice();

        svg.append("g")
                .attr("class", "x axis")
                .attr("transform", "translate(0," + height + ")")
                .call(xAxis)
                .append("text")
                .attr("class", "label")
                .attr("x", width)
                .attr("y", -6)
                .style("text-anchor", "end")
                .text("Petal Width (cm)");

        svg.append("g")
                .attr("class", "y axis")
                .call(yAxis)
                .append("text")
                .attr("class", "label")
                .attr("transform", "rotate(-90)")
                .attr("y", 6)
                .attr("dy", ".71em")
                .style("text-anchor", "end")
                .text("Petal Length (cm)")

        var circles = svg.selectAll(".dot")
                .data(data)
                .enter().append("circle")
                .attr("class", "dot")
                .attr("r", 3.5)
                .attr("cx", function(d) { return x(d.petalWidth); })
                .attr("cy", function(d) { return y(d.petalLength); })
                .style("fill", function(d) { return color(d.species); });


        var legend = svg.selectAll(".legend")
                .data(color.domain())
                .enter().append("g")
                .attr("class", "legend")
                .attr("transform", function(d, i) { return "translate(0," + i * 20 + ")"; });


        legend.append("rect")
                .attr("x", width - 18)
                .attr("width", 18)
                .attr("height", 18)
                .style("fill", color);


        legend.append("text")
                .attr("x", width - 24)
                .attr("y", 9)
                .attr("dy", ".35em")
                .style("text-anchor", "end")
                .text(function(d) { return d; });



        d3.selectAll("[name=v]").on("change", function() {
            var selected = this.value;
            display = this.checked ? "inline" : "none";


            svg.selectAll(".dot")
                    .filter(function(d) {return selected == d.species;})
                    .attr("display", display);
        });



        d3.selectAll("[name=sepal]").on("change", function(d) {
            radius = this.value;

            svg.selectAll(".dot")
            console.log(radius);
            circles.attr("r", function(d) { return d[radius]; });
        });



        d3.select("[name=xAX]").on("change", function(){
            xAxy = this.value;
            console.log(xAxy)
            x.domain(d3.extent(data, function(d) { return d[xAxy]; })).nice();

            svg.select(".x.axis").transition().call(xAxis);

            svg.selectAll(".dot").transition().attr("cx", function(d) {
                return x(d[xAxy]);
            });
            svg.selectAll(".x.axis").selectAll("text.label").text(axisNames[xAxy] + " (cm)");
        });

        d3.select("[name=yAX]").on("change", function(){
            yAxy = this.value;
            console.log(yAxy)
            y.domain(d3.extent(data, function(d) { return d[yAxy]; })).nice();
            svg.select(".y.axis").transition().call(yAxis);
            svg.selectAll(".dot").transition().attr("cy", function(d) {
                return y(d[yAxy]);
            });
            svg.selectAll(".y.axis").selectAll("text.label").text(axisNames[yAxy] + " (cm)");
        });

    });

</script>
<br><br>


<div id="filter">
    <b>Species Filter:</b>
    <br>
    <input name='v' value="Iris-setosa" type="checkbox" checked>Iris-setosa
    </input>
    <br>
    <input name="v" value="Iris-versicolor" type="checkbox" checked >Iris-versicolor
    </input>
    <br>
    <input name="v" value="Iris-virginica" type="checkbox" checked >Iris-virginica
    </input>
</div>


<form id="mark">
    <b>Size of Mark:</b>
    <div><input type="radio" name="sepal" value='sepalWidth'>Sepal Width</div>
    <div><input type="radio" name="sepal" value="sepalLength">Sepal Length</div>
</form>

<div id="label"><b>x-Axis:</b></div>
<select name="xAX" id="xAXs">
    <option value ="petalWidth">petalWidth</option>
    <option value ="petalLength">petalLength</option>
    <option value ="sepalLength">sepalLength</option>
    <option value ="sepalWidth">sepalWidth</option>
</select>

<div id="label2"><b>y-Axis:</b></div>
<select name="yAX" id="yAXs">
    <option value ="petalLength">petalLength</option>
    <option value ="petalWidth">petalWidth</option>
    <option value ="sepalLength">sepalLength</option>
    <option value ="sepalWidth">sepalWidth</option>
</select>

<br>
</body>
